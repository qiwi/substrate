{
  "workspaces": [
    "packages/*"
  ],
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "clean": "lerna clean --yes && lerna run clean",
    "build": "yarn clean && lerna run --stream build",
    "bootstrap": "lerna bootstrap",
    "test": "lerna run --stream test",
    "jest": "jest",
    "test_with_report": "npm test && npm run codeclimate_push && npm run coveralls_push",
    "codeclimate_push": "codeclimate-test-reporter < ./coverage/lcov.info",
    "coveralls_push": "cat ./coverage/lcov.info | coveralls",
    "lint": "standard packages/**/src/**/*.ts --fix --verbose | snazzy",
    "docs": "typedoc packages/**/src/main --ignoreCompilerErrors || exit 0"
  },
  "devDependencies": {
    "@semantic-release/changelog": "^3.0.2",
    "@semantic-release/commit-analyzer": "^6.1.0",
    "@semantic-release/git": "7.0.7",
    "@semantic-release/github": "5.2.8",
    "@semantic-release/npm": "5.1.3",
    "@semantic-release/release-notes-generator": "7.1.4",
    "coveralls": "^3.0.2",
    "eslint-plugin-typescript": "^0.14.0",
    "jest": "^23.6.0",
    "lerna": "^3.10.5",
    "replace-in-file": "^3.4.3",
    "semantic-release": "15.13.2",
    "semantic-release-monorepo": "6.1.1",
    "semantic-release-monorepo-hooks": "2.9.1",
    "semantic-release-plugin-decorators": "^2.0.0",
    "snazzy": "^8.0.0",
    "standard": "^12.0.1",
    "ts-jest": "^23.10.5",
    "typedoc": "^0.14.1",
    "typescript": "^3.2.2",
    "typescript-eslint-parser": "^21.0.2"
  },
  "jest": {
    "collectCoverage": true,
    "projects": [
      "<rootDir>/packages/core/jest.config.json",
      "<rootDir>/packages/types/jest.config.json",
      "<rootDir>/packages/abstract/jest.config.json"
    ]
  },
  "standard": {
    "parser": "typescript-eslint-parser",
    "plugins": [
      "typescript"
    ],
    "globals": [
      "jest",
      "it",
      "expect",
      "describe",
      "before",
      "beforeAll",
      "beforeEach",
      "afterAll",
      "after",
      "afterEach",
      "xdescribe",
      "xit"
    ],
    "rules": {
      "use-flow-type": 1
    },
    "ignore": [],
    "settings": {
      "flowtype": {
        "onlyFilesWithFlowAnnotation": true
      }
    }
  }
}
